name: Cross-Platform Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  test-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
    
    - name: Cache pipenv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pipenv-
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        pipenv install --dev
    
    - name: Create test environment file (Unix)
      if: runner.os != 'Windows'
      working-directory: ./backend
      run: |
        cat > .env << EOF
        ENVIRONMENT=test
        DEBUG=true
        APP_NAME="AI Document Processor Test"
        APP_VERSION="1.0.0"
        DATABASE_URL=sqlite:///./test.db
        ANTHROPIC_API_KEY=test_key_not_used
        MAX_FILE_SIZE=10485760
        ALLOWED_FILE_TYPES=application/pdf,text/plain
        UPLOAD_FOLDER=uploads
        CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
        SECRET_KEY=test_secret_key_for_ci
        EOF
    
    - name: Create test environment file (Windows)
      if: runner.os == 'Windows'
      working-directory: ./backend
      run: |
        echo "ENVIRONMENT=test" > .env
        echo "DEBUG=true" >> .env
        echo "APP_NAME=AI Document Processor Test" >> .env
        echo "APP_VERSION=1.0.0" >> .env
        echo "DATABASE_URL=sqlite:///./test.db" >> .env
        echo "ANTHROPIC_API_KEY=test_key_not_used" >> .env
        echo "MAX_FILE_SIZE=10485760" >> .env
        echo "ALLOWED_FILE_TYPES=application/pdf,text/plain" >> .env
        echo "UPLOAD_FOLDER=uploads" >> .env
        echo "CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000" >> .env
        echo "SECRET_KEY=test_secret_key_for_ci" >> .env
    
    - name: Run core functionality tests
      working-directory: ./backend
      run: |
        pipenv run pytest tests/test_debug.py tests/test_integration.py -v
    
    - name: Run API tests
      working-directory: ./backend
      run: |
        pipenv run pytest tests/test_file_upload.py tests/test_checklist.py tests/test_chat.py -v --tb=short

  dependency-security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv safety
    
    - name: Check for security vulnerabilities
      working-directory: ./backend
      run: |
        pipenv check || echo "Security check completed with warnings"
    
    - name: Check dependencies with safety
      working-directory: ./backend
      run: |
        pipenv run safety check || echo "Safety check completed"